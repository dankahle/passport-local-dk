{
  "name": "passport-local-dk",
  "version": "1.0.0",
  "description": "This is my take on a passport-local solution using angular for the login/register pages, as the web egs all seem to be in love with serverside views. The serverside view would stick login errors in the session (flashes) and pull them out on the redirect back to login. I needed to do the equivalent with angular pages using xhr, not terribly difficult, but does force you to hook into the passport.authorize() to get the verbose messages back, if you don't you'll get the generic messages back (400/bad request, 401/unauthorized), which you may very well want, but I figure if you want to deter hackers/computers, then some logic that would shut down login for 5 minutes after 5 failures or so.",
  "main": "login.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dankahle/passport-local-dk.git"
  },
  "author": "Dan Kahle",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/dankahle/passport-local-dk/issues"
  },
  "homepage": "https://github.com/dankahle/passport-local-dk",
  "dependencies": {
    "api-error-handler": "^1.0.0",
    "body-parser": "^1.12.2",
    "debug": "^2.1.3",
    "express": "^4.12.3",
    "express-domain-middleware": "^0.1.0",
    "express-session": "^1.10.4",
    "mongoose": "^4.0.1",
    "passport": "^0.2.1",
    "passport-local": "^1.0.0",
    "passport-local-mongoose": "^1.0.0"
  }
}
